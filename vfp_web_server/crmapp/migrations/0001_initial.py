# Generated by Django 3.0.3 on 2020-03-11 11:30

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FusionPeptides',
            fields=[
                ('idfusion_peptides', models.IntegerField(db_column='idFusion_Peptides', primary_key=True, serialize=False)),
                ('residues', models.CharField(blank=True, db_column='Residues', max_length=45, null=True)),
                ('sequence', models.CharField(blank=True, db_column='Sequence', max_length=10000, null=True)),
                ('annotation_method', models.CharField(blank=True, db_column='Annotation_Method', max_length=500, null=True)),
                ('exp_evidence', models.CharField(blank=True, db_column='Exp_Evidence', max_length=500, null=True)),
            ],
            options={
                'verbose_name_plural': 'Fusion Peptides',
                'db_table': 'fusion_peptides',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('idhost', models.IntegerField(db_column='idHost', primary_key=True, serialize=False)),
                ('host', models.CharField(blank=True, db_column='Host', max_length=45, null=True)),
                ('ncbitax', models.CharField(blank=True, db_column='NcbiTax', max_length=45, null=True)),
            ],
            options={
                'verbose_name_plural': 'Hosts',
                'db_table': 'host',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PeptideStructure',
            fields=[
                ('idpeptide_structure', models.IntegerField(db_column='idPeptide_Structure', primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name_plural': "Fusion Peptides' Structures",
                'db_table': 'peptide_structure',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Protein',
            fields=[
                ('idprotein', models.IntegerField(db_column='idProtein', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=500, null=True)),
                ('class_field', models.CharField(blank=True, db_column='Class', max_length=45, null=True)),
                ('activation', models.CharField(blank=True, db_column='Activation', max_length=45, null=True)),
                ('name_fusogenic_unit', models.CharField(blank=True, db_column='Name_Fusogenic_Unit', max_length=500, null=True)),
                ('location_fusogenic', models.CharField(blank=True, db_column='Location_Fusogenic', max_length=500, null=True)),
                ('sequence_fusogenic', models.CharField(blank=True, db_column='Sequence_fusogenic', max_length=10000, null=True)),
                ('uniprotid', models.CharField(blank=True, db_column='UniProtID', max_length=45, null=True)),
                ('ncbiid', models.CharField(blank=True, db_column='NcbiID', max_length=45, null=True)),
            ],
            options={
                'verbose_name_plural': 'Fusion Proteins',
                'db_table': 'protein',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='References',
            fields=[
                ('idreferences', models.IntegerField(db_column='idReferences', primary_key=True, serialize=False)),
                ('type_reference', models.CharField(blank=True, db_column='Type_Reference', max_length=45, null=True)),
                ('doi', models.CharField(blank=True, db_column='DOI', max_length=500, null=True)),
            ],
            options={
                'verbose_name_plural': 'References',
                'db_table': 'references',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Structure',
            fields=[
                ('idstructure', models.IntegerField(db_column='idStructure', primary_key=True, serialize=False)),
                ('exp_method', models.CharField(blank=True, db_column='Exp_method', max_length=100, null=True)),
                ('repository', models.CharField(blank=True, db_column='Repository', max_length=100, null=True)),
                ('id_repository', models.CharField(blank=True, db_column='ID_Repository', max_length=45, null=True)),
            ],
            options={
                'verbose_name_plural': 'Structures',
                'db_table': 'structure',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TaxHost',
            fields=[
                ('idtaxhost', models.IntegerField(db_column='idTaxHost', primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name_plural': "Viruses' Hosts",
                'db_table': 'tax_host',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TaxonomyVirus',
            fields=[
                ('idtaxonomy', models.IntegerField(db_column='idTaxonomy', primary_key=True, serialize=False)),
                ('commonname', models.CharField(blank=True, db_column='CommonName', max_length=200, null=True)),
                ('family', models.CharField(blank=True, db_column='Family', max_length=45, null=True)),
                ('genre', models.CharField(blank=True, db_column='Genre', max_length=45, null=True)),
                ('species', models.CharField(blank=True, db_column='Species', max_length=45, null=True)),
                ('subspecies', models.CharField(blank=True, db_column='SubSpecies', max_length=45, null=True)),
                ('ncbitax', models.CharField(blank=True, db_column='NcbiTax', max_length=45, null=True)),
            ],
            options={
                'verbose_name_plural': "Viruses' Taxonomies",
                'db_table': 'taxonomy_virus',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PeptideReferences',
            fields=[
                ('idpeptide', models.ForeignKey(db_column='idPeptide', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='crmapp.FusionPeptides')),
            ],
            options={
                'verbose_name_plural': "Fusion Peptides' References",
                'db_table': 'peptide_references',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProteinReferences',
            fields=[
                ('idprotein', models.ForeignKey(db_column='idProtein', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='crmapp.Protein')),
            ],
            options={
                'verbose_name_plural': "Fusion Proteins' References",
                'db_table': 'protein_references',
                'managed': False,
            },
        ),
    ]
